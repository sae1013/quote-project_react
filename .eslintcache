[{"/Users/minwoo/Downloads/quote-project/src/index.js":"1","/Users/minwoo/Downloads/quote-project/src/App.js":"2","/Users/minwoo/Downloads/quote-project/src/pages/QuoteDetail.js":"3","/Users/minwoo/Downloads/quote-project/src/pages/AllQuotes.js":"4","/Users/minwoo/Downloads/quote-project/src/pages/NewQuote.js":"5","/Users/minwoo/Downloads/quote-project/src/components/comments/Comments.js":"6","/Users/minwoo/Downloads/quote-project/src/components/comments/NewCommentForm.js":"7","/Users/minwoo/Downloads/quote-project/src/components/layout/Layout.js":"8","/Users/minwoo/Downloads/quote-project/src/components/layout/MainNavigation.js":"9","/Users/minwoo/Downloads/quote-project/src/components/quotes/QuoteList.js":"10","/Users/minwoo/Downloads/quote-project/src/components/quotes/QuoteItem.js":"11","/Users/minwoo/Downloads/quote-project/src/components/quotes/QuoteForm.js":"12","/Users/minwoo/Downloads/quote-project/src/components/UI/Card.js":"13","/Users/minwoo/Downloads/quote-project/src/components/UI/LoadingSpinner.js":"14","/Users/minwoo/Downloads/quote-project/src/components/quotes/HighlightedQuote.js":"15","/Users/minwoo/Downloads/quote-project/src/pages/NotFound.js":"16","/Users/minwoo/Downloads/quote-project/src/hooks/use-http.js":"17","/Users/minwoo/Downloads/quote-project/src/components/quotes/NoQuotesFound.js":"18","/Users/minwoo/Downloads/quote-project/src/components/comments/CommentsList.js":"19","/Users/minwoo/Downloads/quote-project/src/components/comments/CommentItem.js":"20","/Users/minwoo/Downloads/quote-project/src/lib/api.js":"21"},{"size":228,"mtime":1622623532906,"results":"22","hashOfConfig":"23"},{"size":818,"mtime":1623064602874,"results":"24","hashOfConfig":"23"},{"size":1615,"mtime":1623061468726,"results":"25","hashOfConfig":"23"},{"size":966,"mtime":1623058643911,"results":"26","hashOfConfig":"23"},{"size":737,"mtime":1623059861136,"results":"27","hashOfConfig":"23"},{"size":1786,"mtime":1623063163219,"results":"28","hashOfConfig":"23"},{"size":1354,"mtime":1623063307234,"results":"29","hashOfConfig":"23"},{"size":365,"mtime":1622437956355,"results":"30","hashOfConfig":"23"},{"size":649,"mtime":1623051489649,"results":"31","hashOfConfig":"23"},{"size":1316,"mtime":1622519848956,"results":"32","hashOfConfig":"23"},{"size":509,"mtime":1622538887986,"results":"33","hashOfConfig":"23"},{"size":1898,"mtime":1623051666943,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1622623494763,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1622623493675,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1616567772000,"results":"37","hashOfConfig":"23"},{"size":179,"mtime":1622623530245,"results":"38","hashOfConfig":"23"},{"size":1248,"mtime":1623065174301,"results":"39","hashOfConfig":"23"},{"size":330,"mtime":1622543014071,"results":"40","hashOfConfig":"23"},{"size":334,"mtime":1622636428206,"results":"41","hashOfConfig":"23"},{"size":200,"mtime":1622623491267,"results":"42","hashOfConfig":"23"},{"size":2121,"mtime":1623065124250,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"eq6t7h",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/minwoo/Downloads/quote-project/src/index.js",[],["93","94"],"/Users/minwoo/Downloads/quote-project/src/App.js",["95"],"import React,{useEffect} from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom';\n\nimport Layout from './components/layout/Layout'\nimport AllQuotes from './pages/AllQuotes'\nimport NewQuote from './pages/NewQuote';\nimport QuoteDetail from './pages/QuoteDetail';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    \n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes'/>\n        </Route>\n\n        <Route path='/quotes' exact>\n          <AllQuotes/>\n        </Route>\n\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail/>\n        </Route>\n\n        <Route path='/new-quote'>\n          <NewQuote/>\n        </Route>\n\n        <Route path='*'>\n          <NotFound/>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/minwoo/Downloads/quote-project/src/pages/QuoteDetail.js",["96","97","98"],"import React,{useEffect,useState} from 'react'\nimport {useParams,Route,Link,useLocation,useHistory,useRouteMatch} from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport  LoadingSpinner from '../components/UI/LoadingSpinner';\nimport {getSingleQuote} from '../lib/api';\nfunction QuoteDetail() {\n\n    const params = useParams();\n    const match = useRouteMatch();\n    const {quoteId} = params;\n    \n    const {sendRequest,status,data:quote ,error} = useHttp(getSingleQuote,true);\n\n    useEffect(()=>{\n        sendRequest(quoteId);\n    },[sendRequest,quoteId]);\n\n    if(status ==='pending'){\n        return (\n            <div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        );\n    }\n    if(error){\n        return <p className='centered'>{error}</p>\n    };\n\n    if(status==='completed' && !quote){\n        return <p> No quote found</p>\n    }\n\n    return (\n        <React.Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author}></HighlightedQuote>\n            <Route path={`${match.path}`} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.url}/comments`}>\n                        Load Comments\n                    </Link>\n                </div>\n            </Route>\n            \n            <Route path={`${match.path}/comments`}>\n                <Comments/>\n            </Route>\n            \n        </React.Fragment>\n\n    )\n}\n\nexport default QuoteDetail\n","/Users/minwoo/Downloads/quote-project/src/pages/AllQuotes.js",["99"],"import React,{useState,useEffect} from 'react'\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport {getAllQuotes} from '../lib/api';\n\nfunction AllQuotes() {\n    const {sendRequest, status, data, error} = useHttp(getAllQuotes,true);\n    useEffect(()=>{\n        sendRequest();\n    },[sendRequest])\n\n    if(status ==='pending') {\n        return (\n        <div className='centered'>\n            <LoadingSpinner/>\n        </div>\n        )\n    }\n    else if(error){\n        return <p className='centered focused'>{error}</p>;\n    }\n\n    else if(status ==='completed' && !data){\n        return <NoQuotesFound/>\n    }\n    \n    else if(status ==='completed' && data.length>0){\n        return (\n            <QuoteList quotes = {data}/>\n        )\n    }\n    return null\n}\n\nexport default AllQuotes\n\n ","/Users/minwoo/Downloads/quote-project/src/pages/NewQuote.js",["100","101","102"],"import React , {useState,useEffect} from 'react'\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport {addQuote} from '../lib/api';\n\nfunction NewQuote() { // http req hooks 사용\n    const history = useHistory();\n    const {sendRequest,status,error} = useHttp(addQuote);\n    \n    const addQuoteHandler = (quoteInfo) => {\n        sendRequest(quoteInfo);\n    };\n    \n    useEffect(()=>{\n        if(status ==='completed'){\n            history.push('/quotes');\n        }\n    },[status]);\n    \n    return (\n      <QuoteForm onAddQuote={addQuoteHandler} isLoading = { status==='pending' } ></QuoteForm>    \n    )\n}\n\nexport default NewQuote\n\n \n","/Users/minwoo/Downloads/quote-project/src/components/comments/Comments.js",[],"/Users/minwoo/Downloads/quote-project/src/components/comments/NewCommentForm.js",[],"/Users/minwoo/Downloads/quote-project/src/components/layout/Layout.js",[],"/Users/minwoo/Downloads/quote-project/src/components/layout/MainNavigation.js",[],"/Users/minwoo/Downloads/quote-project/src/components/quotes/QuoteList.js",["103"],"import { Fragment,useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes,ascending) => {\n  return quotes.sort((A,B)=>{\n    if(ascending){\n      return A.id > B.id ? 1 : -1;\n    }else {\n      return A.id < B.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') ==='asc';\n  const sortedQuotes = sortQuotes(props.quotes,isSortingAscending);\n  \n\n  const changeSortingHandler = ()=> {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick = {changeSortingHandler}>Sort {isSortingAscending ? 'Desc':'Asc'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","/Users/minwoo/Downloads/quote-project/src/components/quotes/QuoteItem.js",[],"/Users/minwoo/Downloads/quote-project/src/components/quotes/QuoteForm.js",["104","105","106"],"import React,{ useRef,useState,useEffect } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  \n  const [isEntered,setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    \n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    \n    if(enteredAuthor.trim() != '' && enteredText.trim() != ''){\n      props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n    \n  };\n\n  const formFocusedHandler = () => {\n    \n    setIsEntered(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  };\n  return (\n    <React.Fragment>\n      <Prompt when = {isEntered} message = {(location)=>'뒤로 가시겠습니까? 데이터는 삭제됩니다.'}></Prompt>\n      <Card>\n        <form className={classes.form} \n              onSubmit={submitFormHandler}\n              onFocus={formFocusedHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn' onClick={finishEnteringHandler}>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteForm;\n","/Users/minwoo/Downloads/quote-project/src/components/UI/Card.js",[],"/Users/minwoo/Downloads/quote-project/src/components/UI/LoadingSpinner.js",[],"/Users/minwoo/Downloads/quote-project/src/components/quotes/HighlightedQuote.js",[],"/Users/minwoo/Downloads/quote-project/src/pages/NotFound.js",[],"/Users/minwoo/Downloads/quote-project/src/hooks/use-http.js",["107"],"/Users/minwoo/Downloads/quote-project/src/components/quotes/NoQuotesFound.js",[],"/Users/minwoo/Downloads/quote-project/src/components/comments/CommentsList.js",[],"/Users/minwoo/Downloads/quote-project/src/components/comments/CommentItem.js",[],"/Users/minwoo/Downloads/quote-project/src/lib/api.js",["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":15,"nodeType":"116","messageId":"117","endLine":1,"endColumn":24},{"ruleId":"114","severity":1,"message":"118","line":1,"column":25,"nodeType":"116","messageId":"117","endLine":1,"endColumn":33},{"ruleId":"114","severity":1,"message":"119","line":2,"column":30,"nodeType":"116","messageId":"117","endLine":2,"endColumn":41},{"ruleId":"114","severity":1,"message":"120","line":2,"column":42,"nodeType":"116","messageId":"117","endLine":2,"endColumn":52},{"ruleId":"114","severity":1,"message":"118","line":1,"column":15,"nodeType":"116","messageId":"117","endLine":1,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"121","line":10,"column":31,"nodeType":"116","messageId":"117","endLine":10,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":20,"column":7,"nodeType":"124","endLine":20,"endColumn":15,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":19,"nodeType":"116","messageId":"117","endLine":1,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":1,"column":32,"nodeType":"116","messageId":"117","endLine":1,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":20,"column":29,"nodeType":"128","messageId":"129","endLine":20,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":20,"column":57,"nodeType":"128","messageId":"129","endLine":20,"endColumn":59},{"ruleId":"114","severity":1,"message":"130","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"131","line":49,"column":11,"nodeType":"116","messageId":"117","endLine":49,"endColumn":15},{"ruleId":"114","severity":1,"message":"131","line":81,"column":11,"nodeType":"116","messageId":"117","endLine":81,"endColumn":15},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["134"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [history, status]",{"range":"137","text":"138"},[569,577],"[history, status]"]